#!/usr/bin/env python3
# Send message by matrix

import os
import sys
from matrix_client.api import MatrixHttpApi

CONF_DIR = "M4_ETC_DIR/me-matrix-send.d"
CONF_VAR = {"BOTNAME", "PASSWORD", "SERVER", "ROOM"}

def die(msg):
    print(msg)
    sys.exit(1)

def usage():
    die(
"""Usage: matrix-send -c <conf> <msg>...

Options:
  -c <conf> <msg>           Send message according to an existed configuration file""")


def parse_conf():
    exec(open(conf).read())
    if not CONF_VAR.issubset(locals()):
        die("Lack of some required variables.")

    for var in CONF_VAR:
        globals()[var] = locals()[var]
        if not isinstance(globals()[var], str):
            die("Type of configuration variable '%s' must be string." % var)


def matrix_send():
    api = MatrixHttpApi(SERVER)
    api.validate_cert = False
    api.token = api.login("m.login.password", user=BOTNAME, password=PASSWORD)["access_token"]
    room_id = api.get_room_id(ROOM)
    api.send_message(room_id, ' '.join(sys.argv[3:]))
    
if __name__ == "__main__":

    if len(sys.argv) >= 3 and sys.argv[1] in ["-c"]:
        conf = os.path.join(CONF_DIR, sys.argv[2] + ".conf")
        if not os.path.isfile(conf):
            die("Cannot find configuration file '%s'." % conf)

        parse_conf()
        matrix_send()

    else:
        usage()

