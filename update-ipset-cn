#!/bin/bash

die() {
  echo "${@:2}"
  exit $1
}

usage() {
  echo "Usage: $(basename $0) [-h|--help] [-u|--update] [-x|--proxy <PROXY>] -f|--file <FILE> <SETNAME>"
  echo ""
  echo "Arguments"
  echo "  -h, --help     Display this help page"
  echo "  -u, --update   Sync from remote to update entries"
  echo "  -x, --proxy    Use proxy when syncing from remote"
  echo "  -f, --file     File path to load entries"
  echo "  <SETNAME>      Setname used by ipset"
  exit 0
}

while (( ${#@} > 0 )) ; do
  case $1 in
    -h|--help  	) usage ;;
    -u|--update ) update=true ;;
    -f|--file   ) shift; file=$1 ;;
    -x|--proxy  ) shift; proxy="-x $1" ;;
    *           ) if [[ ! -v setname ]]; then setname=$1; else die 1 "unsupport multiple <SETNAME>."; fi ;;
  esac
  shift
done

if [[ ! -v setname ]]; then
  die 1 "<SETNAME> is required"
fi
if [[ ! -v file ]]; then
  die 1 "<FILE> is required"
fi
if [[ ! -f $file ]]; then
  die 1 "'$file' must be existed"
fi

# To compatible with busybox, temp template must suffix with six 'X', such as tmp.XXXXXX
setname_temp=$(mktemp -u $setname-XXXXXX)

ipset create "$setname" hash:net &> /dev/null
ipset create "$setname_temp" hash:net &> /dev/null

if [[ $update == true ]]; then
  file_temp=$(mktemp -u /tmp/$(basename $0).XXXXXX)
  curl $proxy -S -k -o "$file_temp" \
    'https://raw.githubusercontent.com/17mon/china_ip_list/master/china_ip_list.txt'
fi

while read block; do
  ipset add "$setname_temp" "$block" || {
    ipset destroy "$setname_temp"
    die 1 "Error to add '$block' into '$setname_temp'"
  }
done < "${file_temp:-$file}"

ipset swap "$setname_temp" "$setname"

if [[ $update == true ]]; then
  mv "$file_temp" "$file"
fi

ipset destroy "$setname_temp"
